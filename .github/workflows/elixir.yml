# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
    #- name: Run tests
    #  run: mix test
  deploy:
    environment: staging
    name: Build and deploy to staging
    runs-on: ubuntu-latest

    env:
      ImageOS: ubuntu24
    
    steps:
    - uses: actions/checkout@v4
    - name: Build and deploy staging
      uses: erlef/setup-beam@v1 # v1.16.0
      with:
        elixir-version: '1.15.2' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: MIX_ENV=prod mix deps.get --only prod
    - name: Compile
      run: MIX_ENV=prod mix compile
    - name: Deploy Assets
      run: MIX_ENV=prod mix assets.deploy
    - name: Release
      run: MIX_ENV=prod mix release
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_drip_gh
        chmod 600 ~/.ssh/id_drip_gh
        ssh-keyscan -H 64.227.110.128 >> ~/.ssh/known_hosts
    - name: Transfer files to staging server
      run: scp -i ~/.ssh/id_drip_gh -r _build/prod/rel root@64.227.110.128:/etc/drip/


